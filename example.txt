class O:

////
rating = 7.5
count_review = 10

7.5 * 10
75 + 6 = 81
81 / 11 = 7.4


<QueryDict: {'csrfmiddlewaretoken': ['7gJdMncinHFuiKTEybE8qxMd7kh5nPkwfSZjwJr15OQyMy0FyZrtvkaOETyOPU38'], 'text': ['sdaf'], 'assesment': ['2'], 'product': ['4'], 'user': ['1']}>

<QueryDict: {'csrfmiddlewaretoken': ['GNc9Q1oID2ZtACNDa7E32e1CTM4qn1nlOpsfAnDrl9ax4qUEaVro71pdqll9P66X'], 'text': ['safg'], 'assesment': ['1'], 'user': ['1'], 'product': ['2']}>


<div>
    <label for="id_username">Имя пользователя:</label>

<div class="helptext" id="id_username_helptext">Обязательное поле. Не более 150 символов. Только буквы, цифры и символы @/./+/-/_.</div>

<input type="text" name="username" maxlength="150" autofocus required aria-describedby="id_username_helptext" id="id_username">
    
</div>

  <div>
    <label for="id_email">Адрес электронной почты:</label>



<input type="email" name="email" maxlength="254" id="id_email">
    
</div>

  <div>
    <label for="id_password1">Пароль:</label>

<div class="helptext" id="id_password1_helptext"><ul><li>Пароль не должен быть слишком похож на другую вашу личную информацию.</li><li>Ваш пароль должен содержать как минимум 8 символов.</li><li>Пароль не должен быть слишком простым и распространенным.</li><li>Пароль не может состоять только из цифр.</li></ul></div>

<input type="password" name="password1" autocomplete="new-password" required aria-describedby="id_password1_helptext" id="id_password1">
    
</div>

  <div>
    <label for="id_password2">Подтверждение пароля:</label>

<div class="helptext" id="id_password2_helptext">Для подтверждения введите, пожалуйста, пароль ещё раз.</div>

<input type="password" name="password2" autocomplete="new-password" required aria-describedby="id_password2_helptext" id="id_password2">
    
      
    
</div>


'DoesNotExist', 'MultipleObjectsReturned', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_check_column_name_clashes', '_check_constraints', '_check_db_table_comment', '_check_default_pk', '_check_field_name_clashes', '_check_fields', '_check_id_field', '_check_index_together', '_check_indexes', '_check_local_fields', '_check_long_column_names', '_check_m2m_through_same_relationship', '_check_managers', '_check_model', '_check_model_name_db_lookup_clashes', '_check_ordering', '_check_property_name_related_field_accessor_clashes', '_check_single_primary_key', '_check_swappable', '_check_unique_together', '_do_insert', '_do_update', '_get_FIELD_display', '_get_expr_references', '_get_field_value_map', '_get_next_or_previous_by_FIELD', '_get_next_or_previous_in_order', '_get_pk_val', '_get_unique_checks', '_meta', '_perform_date_checks', '_perform_unique_checks', '_prepare_related_fields_for_save', '_save_parents', '_save_table', '_set_pk_val', '_state', '_validate_force_insert', 'adelete', 'arefresh_from_db', 'asave', 'categories', 'check', 'clean', 'clean_fields', 'date_error_message', 'delete', 'description', 'from_db', 'full_clean', 'get_absolute_url', 'get_constraints', 'get_deferred_fields', 'id', 'objects', 'pk', 'prepare_database_save', 'price', 'product_media', 'rating', 'refresh_from_db', 'review_set', 'save', 'save_base', 'serializable_value', 'sizes', 'title', 'unique_error_message', 'validate_constraints', 'validate_unique'





'__call__', '__class__', '__class_getitem__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__slotnames__', '__str__', '__subclasshook__', '__weakref__', '_add_items', '_apply_rel_filters', '_build_remove_filters', '_constructor_args', '_db', '_get_add_plan', '_get_missing_target_ids', '_get_queryset_methods', '_get_target_ids', '_hints', '_insert', '_queryset_class', '_remove_items', '_remove_prefetched_objects', '_set_creation_counter', '_update', 'aadd', 'aaggregate', 'abulk_create', 'abulk_update', 'aclear', 'acontains', 'acount', 'acreate', 'add', 'aearliest', 'aexists', 'aexplain', 'afirst', 'aget', 'aget_or_create', 'aggregate', 'ain_bulk', 'aiterator', 'alast', 'alatest', 'alias', 'all', 'annotate', 'aremove', 'aset', 'aupdate', 'aupdate_or_create', 'auto_created', 'bulk_create', 'bulk_update', 'check', 'clear', 'complex_filter', 'contains', 'contribute_to_class', 'core_filters', 'count', 'create', 'creation_counter', 'dates', 'datetimes', 'db', 'db_manager', 'deconstruct', 'defer', 'difference', 'distinct', 'do_not_call_in_templates', 'earliest', 'exclude', 'exists', 'explain', 'extra', 'filter', 'first', 'from_queryset', 'get', 'get_or_create', 'get_prefetch_queryset', 'get_prefetch_querysets', 'get_queryset', 'in_bulk', 'instance', 'intersection', 'iterator', 'last', 'latest', 'model', 'name', 'none', 'only', 'order_by', 'pk_field_names', 'prefetch_cache_name', 'prefetch_related', 'query_field_name', 'raw', 'related_val', 'remove', 'reverse', 'select_for_update', 'select_related', 'set', 'source_field', 'source_field_name', 'symmetrical', 'target_field', 'target_field_name', 'through', 'union', 'update', 'update_or_create', 'use_in_migrations', 'using', 'values', 'values_list'

Some children do not receive a quality education. Who should provide quality education parents or the government? In this essay, I will discuss who should provide quality education and for what reasons.

One of the main responsibilities of parents is to provide for their kids and a quality education depends on parents. if parents do not give opportunities to their kids. They will not get the necessary education. For example, some people teach their children how to take care of cattle or plow the land so that the children can then help their parents, but the kids can not get an education because they spend all their time helping their parents. So, that quality education depends on parents and they should provide education for their kids. However the government must to provide opportunities for kids. If the government does not build schools and universities kids won't get the necessary education.

In conclusion I want to say that a quality education depends on parents more but the government should provide opportunities



Some children do not receive a quality education. And there are many disagreements in many countries about this problem. Some say that parents must provide quality education other say education is responsibility of the government. In this essay, I will discuss who should provide quality education and for what reasons.

One of the main responsibilities of parents is to provide for their kids and a quality education depends on parents. If parents do not give opportunities to their kids. They will not get the necessary education. For example, some people teach their children how to take care of cattle or plow the land so that the children can then help their parents, but the kids can not get an education because they spend all their time helping their parents. Although if parents on the contrary will help their kids for example help to do home works or to explain  obscure topic. Then kids get quality education. So, that quality education depends on parents and they should provide education for their kids. 

However If there are not schools and universities, Kids will not be able to study. So the government must build educational institutions to provide opportunities to kids can receive a education. If the government don’t build education institutions which will be access for all citizen, some parents will not be able to send kids to a private school. For example if parents don’t have enough money or they live a village where there is not private schools. So the quality education is responsibility the government too.

In conclusion I want to say that a quality education is responsibilities of both sides. Parents must help their kids and provide them. The government must provide opportunities for kids by building schools and universities.
